/* USER CODE BEGIN Header */
/**
  ******************************************************************************
  * @file           : main.h
  * @brief          : Header for main.c file.
  *                   This file contains the common defines of the application.
  ******************************************************************************
  * @attention
  *
  * Copyright (c) 2025 STMicroelectronics.
  * All rights reserved.
  *
  * This software is licensed under terms that can be found in the LICENSE file
  * in the root directory of this software component.
  * If no LICENSE file comes with this software, it is provided AS-IS.
  *
  ******************************************************************************
  */
/* USER CODE END Header */

/* Define to prevent recursive inclusion -------------------------------------*/
#ifndef __MAIN_H
#define __MAIN_H

#ifdef __cplusplus
extern "C" {
#endif

/* Includes ------------------------------------------------------------------*/
#include "stm32f0xx_hal.h"

/* Private includes ----------------------------------------------------------*/
/* USER CODE BEGIN Includes */

/*
    09.04.2025  Начало проекта 051. Дисплей заработал и перевёрнут по вертикали) не работает поворот справа налево( придётся полный видеобуфер делать, я так и хотел для больших цифр.
                Часы работают. max17055 работает, id совпадает, ток и напряжение есть





начало только собрал с дисплеем

Unused ranges:

         From           To    Size
         ----           --    ----
   0x800'235f   0x800'ffff  0xdca1      56481 байт
  0x2000'0131  0x2000'0137     0x7
  0x2000'0538  0x2000'1fff  0x1ac8      6856 байт
*/
  
  
  
/* USER CODE END Includes */

/* Exported types ------------------------------------------------------------*/
/* USER CODE BEGIN ET */

/* USER CODE END ET */

/* Exported constants --------------------------------------------------------*/
/* USER CODE BEGIN EC */

/* USER CODE END EC */

/* Exported macro ------------------------------------------------------------*/
/* USER CODE BEGIN EM */

/* USER CODE END EM */

void HAL_TIM_MspPostInit(TIM_HandleTypeDef *htim);

/* Exported functions prototypes ---------------------------------------------*/
void Error_Handler(void);

/* USER CODE BEGIN EFP */

/* USER CODE END EFP */

/* Private defines -----------------------------------------------------------*/
#define MAX_ALERT_Pin GPIO_PIN_3
#define MAX_ALERT_GPIO_Port GPIOA
#define MAX_ALERT_EXTI_IRQn EXTI2_3_IRQn
#define VIBRO_Pin GPIO_PIN_8
#define VIBRO_GPIO_Port GPIOA
#define CHARGER_100_Pin GPIO_PIN_11
#define CHARGER_100_GPIO_Port GPIOA
#define CHARGER_42_Pin GPIO_PIN_12
#define CHARGER_42_GPIO_Port GPIOA

/* USER CODE BEGIN Private defines */
#define ADDR_FLASH_PAGE_0     ((uint32_t)0x08000000) /* Base @ of Page 0, 1 Kbytes */
#define ADDR_FLASH_PAGE_1     ((uint32_t)0x08000400) /* Base @ of Page 1, 1 Kbytes */
#define ADDR_FLASH_PAGE_30    ((uint32_t)0x08007800) /* Base @ of Page 30, 1 Kbytes */
#define ADDR_FLASH_PAGE_31    ((uint32_t)0x08007C00) /* Base @ of Page 31, 1 Kbytes */

#define LAST_FLASH_MEMORY_ADDRESS	(ADDR_FLASH_PAGE_31+FLASH_PAGE_SIZE)
#define ReadCalibrationVaraible(offset)  (*(__IO uint32_t*)(CalibrationAddr + offset))
#define CalibrationDone_Offset  ((uint8_t)0 * sizeof(uint32_t))
#define A2_Offset               ((uint8_t)1 * sizeof(uint32_t))
#define B2_Offset               ((uint8_t)2 * sizeof(uint32_t))
#define C2_Offset               ((uint8_t)3 * sizeof(uint32_t))
#define D2_Offset               ((uint8_t)4 * sizeof(uint32_t))
#define E2_Offset               ((uint8_t)5 * sizeof(uint32_t))
#define F2_Offset               ((uint8_t)6 * sizeof(uint32_t))
#define G2_Offset               ((uint8_t)7 * sizeof(uint32_t))
#define I2_Offset               ((uint8_t)8 * sizeof(uint32_t))
#define K2_Offset               ((uint8_t)9 * sizeof(uint32_t))
#define L2_Offset               ((uint8_t)10 * sizeof(uint32_t))
#define Offset(a)               ((uint8_t)a * sizeof(uint32_t))

#define TSC_FLASH_COMPLETE       FLASH_COMPLETE

#define BUT_UP          5
#define BUT_DOWN        7
#define BUT_OK          3
#define BUT_LED         1

#define TSC_FLASH_FLAG_BSY       ((uint32_t)FLASH_FLAG_BSY)  /*!< FLASH Busy flag */
#define TSC_FLASH_FLAG_EOP       ((uint32_t)FLASH_FLAG_EOP)  /*!< FLASH End of Operation flag */
#define TSC_FLASH_FLAG_PGERR     ((uint32_t)FLASH_FLAG_PGERR)  /*!< FLASH Program error flag */
#define TSC_FLASH_FLAG_WRPERR  ((uint32_t)FLASH_FLAG_WRPERR)  /*!< FLASH Write protected error flag */
/* USER CODE END Private defines */

#ifdef __cplusplus
}
#endif

#endif /* __MAIN_H */
